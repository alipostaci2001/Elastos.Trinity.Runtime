{"version":3,"sources":["../../src/pages/supernodeelection/superpoint/nodeinformation/nodeinformation.module.ts","../../src/pages/supernodeelection/superpoint/nodeinformation/nodeinformation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACM;AACE;AAWxD;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QATrC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6EAAmB;aACpB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6EAAmB,CAAC;gBAC7C,4EAAe,CAAC,QAAQ,EAAE;aAC3B;SACF,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACdI;AACe;AACF;AACH;AACpD;;;;;GAKG;AAOH;IAKE,6BAAmB,OAAsB,EAAS,SAAoB,EAAQ,MAAc;QAAzE,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAQ,WAAM,GAAN,MAAM,CAAQ;QAJrF,aAAQ,GAAC,EAAE,CAAC;QACX,aAAQ,GAAW,KAAK,CAAC;QAC1B,SAAI,GAAE,EAAE,CAAC;QACT,aAAQ,GAAS,GAAG,CAAC;QAErB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,iEAAM,CAAC,oBAAoB,EAAE,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,iEAAM,CAAC,aAAa,EAAE,CAAC;QACxC,4CAA4C;QAC5C,mCAAmC;QACnC,kDAAkD;QAClD,kCAAkC;QAClC,KAAK;IACX,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;IACpD,CAAC;IAED,sCAAQ,GAAR;QACC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,qCAAO,GAAP,UAAQ,KAAK;IAEb,CAAC;IAED,qCAAO,GAAP,UAAQ,KAAK;IAEb,CAAC;IAEM,8CAAgB,GAAvB,UAAwB,IAAI;QAC1B,GAAG,EAAC,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAC;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChC,EAAE,EAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC;gBAClC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;QACH,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,kCAAI,GAAJ,UAAK,GAAG;QACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IA7CU,mBAAmB;QAJ/B,wEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;WACG;SACpC,CAAC;4BAM4F;OALjF,mBAAmB,CA+C/B;IAAD,CAAC;AAAA;SA/CY,mBAAmB,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NodeinformationPage } from './nodeinformation';\n\n@NgModule({\n  declarations: [\n    NodeinformationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(NodeinformationPage),\n    TranslateModule.forChild()\n  ],\n})\nexport class NodeinformationPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/supernodeelection/superpoint/nodeinformation/nodeinformation.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport {  Config } from '../../../../providers/Config';\nimport {Native} from \"../../../../providers/Native\";\n/**\n * Generated class for the NodeinformationPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-nodeinformation',\n  templateUrl: 'nodeinformation.html',\n})\nexport class NodeinformationPage {\n  public countrys=[];\n  public  isStatus:boolean = false;\n  public info= {};\n  public masterId:string =\"1\";\n  constructor(public navCtrl: NavController, public navParams: NavParams,public native :Native) {\n         this.info = this.navParams.data[\"info\"];\n         this.masterId = Config.getCurMasterWalletId();\n         this.countrys = Config.getAllCountry();\n        //  if(this.navParams.data[\"status\"] === 0){\n        //           this.isStatus = false;\n        //  }else if(this.navParams.data[\"status\"] === 1){\n        //           this.isStatus = true;\n        //  }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad NodeinformationPage');\n  }\n\n  lookOver(){\n   this.navCtrl.pop();\n  }\n\n  delList(parms){\n\n  }\n\n  addList(parms){\n\n  }\n\n  public getCountryByCode(code){\n    for(let index in this.countrys){\n        let item = this.countrys[index];\n        if(code === parseInt(item[\"code\"])){\n          return item[\"key\"];\n        }\n      }\n      return \"Unknown\";\n  }\n\n  copy(url){\n    this.native.copyClipboard(url);\n    this.native.toast_trans('copy-ok');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/supernodeelection/superpoint/nodeinformation/nodeinformation.ts"],"sourceRoot":""}